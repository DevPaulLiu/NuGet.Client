parameters:
- name: DartLabEnvironment
  displayName: DartLab Environment
  type: string
  default: Production
  values:
  - Production
  - Staging
  
resources:
  pipelines:
  - pipeline: DartLab
    source: DartLab
    branch: main
  repositories:
  - repository: DartLabTemplates
    type: git
    name: DartLab.Templates
    ref: refs/heads/main

stages:
- stage: Initialize
  jobs:
  - job: GetSemanticVersion
    displayName: Get NuGet.Client semantic version
    timeoutInMinutes: 10
    pool:
      vmImage: windows-latest
    steps:
    - template: templates/Initialize_Build_SemanticVersion.yml

  - job: Initialize_Build
    dependsOn: GetSemanticVersion
    timeoutInMinutes: 10
    variables:
      SemanticVersion: $[dependencies.GetSemanticVersion.outputs['setsemanticversion.SemanticVersion']]
      BuildRevision: $[counter(format('{0}.{1}', variables['SemanticVersion'], variables['build.definitionname']), 1)]
    pool:
      vmImage: windows-latest
    steps:
    - template: templates/Initialize_Build.yml

- stage: Build_Insertable
  displayName: Build NuGet inserted into VS and .NET SDK
  dependsOn: Initialize
  jobs:
  - job: Build_and_UnitTest_NonRTM
    timeoutInMinutes: 170
    variables:
      BuildNumber: $[stageDependencies.Initialize.Initialize_Build.outputs['updatebuildnumber.BuildNumber']]
      FullVstsBuildNumber: $[stageDependencies.Initialize.Initialize_Build.outputs['updatebuildnumber.FullVstsBuildNumber']]
      VsTargetChannel: $[stageDependencies.Initialize.Initialize_Build.outputs['updatebuildnumber.VsTargetChannel']]
      VsTargetMajorVersion: $[stageDependencies.Initialize.Initialize_Build.outputs['updatebuildnumber.VsTargetMajorVersion']]
      SDKVersionForBuild: $[stageDependencies.Initialize.Initialize_Build.outputs['getSDKVersionForBuild.SDKVersionForBuild']]
      LocalizedLanguageCount: "13"
      BuildRTM: "false"
      SemanticVersion: $[stageDependencies.Initialize.GetSemanticVersion.outputs['setsemanticversion.SemanticVersion']]
    pool:
      name: VSEngSS-MicroBuild2022-1ES
    steps:
    - template: templates/Build_and_UnitTest.yml
      parameters:
        BuildRTM: false


- template: templates/End_To_End_Tests_On_Windows.yml
  parameters:
    stageName: VS_EndToEnd_Part1
    stageDisplayName: VS EndToEnd Tests Part 1
    condition: "and(succeeded(), eq(variables['RunEndToEndTests'], 'true'))"
    dependsOn:
    - Initialize
    - Build_Insertable
    testExecutionJobTimeoutInMinutes: 100
    bootstrapperUrl: $(VsBootstrapperUrl)
    runSettingsURI:  https://vsdrop.corp.microsoft.com/file/v1/RunSettings/$(System.TeamProject)/$(Build.Repository.Name)/$(Build.SourceBranchName)/$(Build.BuildId);NuGet.Tests.Apex.runsettings
    DartLabEnvironment: ${{parameters.DartLabEnvironment}}
    variables:
    - name: VsBootstrapperUrl
      value: $[stageDependencies.Build_Insertable.Build_and_UnitTest_NonRTM.outputs['vsbootstrapper.bootstrapperUrl']]
    - name: GitHubStatusName
      value: End_To_End_Tests_On_Windows Part1
    part: "InstallPackageTest.ps1,UninstallPackageTest.ps1,UpdatePackageTest.ps1"