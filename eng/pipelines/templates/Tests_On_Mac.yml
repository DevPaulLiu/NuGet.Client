steps:
- script: |
    cd $BUILD_REPOSITORY_LOCALPATH
    # Download the CLI install script to cli
    echo "Installing dotnet CLI"
    mkdir -p cli
    curl -o cli/dotnet-install.sh -L https://dot.net/v1/dotnet-install.sh

    # Run install.sh
    chmod +x cli/dotnet-install.sh

    # Get recommended version for bootstrapping testing version
    # Install .NET 3.1 runtime
    echo "cli/dotnet-install.sh --install-dir cli --runtime dotnet --channel 3.1 -nopath"
    cli/dotnet-install.sh --install-dir cli --runtime dotnet --channel 3.1 -nopath

    # Install .NET 5.0 runtime
    echo "cli/dotnet-install.sh --install-dir cli --runtime dotnet --channel 5.0 -nopath"
    cli/dotnet-install.sh --install-dir cli --runtime dotnet --channel 5.0 -nopath

    # Disable .NET CLI Install Lookup
    DOTNET_MULTILEVEL_LOOKUP=0

    DOTNET="$(pwd)/cli/dotnet"

    echo "cli/dotnet-install.sh --install-dir cli --channel 6.0.4xx --quality signed -nopath"
    cli/dotnet-install.sh --install-dir cli --channel 6.0.4xx --quality signed -nopath

    # Let the dotnet cli expand and decompress first if it's a first-run
    $DOTNET --info

    cd $BUILD_REPOSITORY_LOCALPATH
    echo "$DOTNET build ./test/NuGet.Core.Tests/NuGet.Resolver.Test/NuGet.Resolver.Test.csproj"
    $DOTNET build ./test/NuGet.Core.Tests/NuGet.Resolver.Test/NuGet.Resolver.Test.csproj

    echo "$DOTNET test ./test/NuGet.Core.Tests/NuGet.Resolver.Test/bin/Debug/netcoreapp3.1/NuGet.Resolver.Test.dll"
    $DOTNET test ./test/NuGet.Core.Tests/NuGet.Resolver.Test/bin/Debug/netcoreapp3.1/NuGet.Resolver.Test.dll

    echo "$DOTNET build ./test/NuGet.Core.Tests/NuGet.Common.Test/NuGet.Common.Test.csproj"
    $DOTNET build ./test/NuGet.Core.Tests/NuGet.Common.Test/NuGet.Common.Test.csproj

    echo "$DOTNET test ./test/NuGet.Core.Tests/NuGet.Common.Test/bin/Debug/netcoreapp3.1/NuGet.Common.Test.dll"
    $DOTNET test ./test/NuGet.Core.Tests/NuGet.Common.Test/bin/Debug/netcoreapp3.1/NuGet.Common.Test.dll

# - task: PublishBuildArtifacts@1
#   displayName: "Publish log"
#   inputs:
#     PathtoPublish: "$(Build.Repository.LocalPath)/log"
#     ArtifactName: "$(Agent.JobName)"
#     ArtifactType: "Container"
#   condition: "succeededOrFailed()"

- task: PublishTestResults@2
  displayName: "Publish Test Results"
  inputs:
    testRunner: "VSTest"
    testResultsFiles: "*.trx"
    searchFolder: "$(Build.Repository.LocalPath)/build/TestResults"
    mergeTestResults: "true"
    testRunTitle: "NuGet.Client Tests On Mac"
  condition: "succeededOrFailed()"
