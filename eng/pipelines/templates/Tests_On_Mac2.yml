steps:
- task: UseDotNet@2
  displayName: 'Use .NET Core sdk'
  inputs:
    packageType: sdk
    version: 6.x
    installationPath: $(Agent.TempDirectory)/dotnet

- task: ShellScript@2
  displayName: "Run Tests (stop on error)"
  continueOnError: "false"
  inputs:
    scriptPath: "scripts/funcTests/runFuncTests2.sh"
    args: '5.0'
    disableAutoCwd: "true"
    cwd: "$(Build.Repository.LocalPath)"
  condition: "and(succeeded(), not(eq(variables['IsOfficialBuild'], 'true')))"

- script: |
    cd $BUILD_REPOSITORY_LOCALPATH
    ./cli/dotnet test ./test/NuGet.Core.Tests/NuGet.Common.Test/bin/release/netcoreapp3.1/NuGet.Common.Test.dll
    echo "single test exitcode is $?"

- script: |
    cd $BUILD_REPOSITORY_LOCALPATH
    echo "./cli/dotnet build ./test/NuGet.Core.Tests/NuGet.Common.Test/NuGet.Common.Test.csproj"
    ./cli/dotnet build ./test/NuGet.Core.Tests/NuGet.Common.Test/NuGet.Common.Test.csproj
    echo "./cli/dotnet test ./test/NuGet.Core.Tests/NuGet.Common.Test/bin/release/netcoreapp3.1/NuGet.Common.Test.dll"
    ./cli/dotnet test ./test/NuGet.Core.Tests/NuGet.Common.Test/bin/release/netcoreapp3.1/NuGet.Common.Test.dll
    echo "single test exitcode is $?"

- task: PublishBuildArtifacts@1
  displayName: "Publish log"
  inputs:
    PathtoPublish: "$(Build.Repository.LocalPath)/log"
    ArtifactName: "$(Agent.JobName)"
    ArtifactType: "Container"
  condition: "succeededOrFailed()"

- task: PublishTestResults@2
  displayName: "Publish Test Results"
  inputs:
    testRunner: "VSTest"
    testResultsFiles: "*.trx"
    searchFolder: "$(Build.Repository.LocalPath)/build/TestResults"
    mergeTestResults: "true"
    testRunTitle: "NuGet.Client Tests On Mac"
  condition: "succeededOrFailed()"
